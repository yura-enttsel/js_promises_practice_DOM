{"version":3,"sources":["scripts/main.js"],"names":["createMessage","message","classType","document","body","insertAdjacentHTML","waitForClick","typeOfClick","Promise","resolve","reject","addEventListener","firstPromise","setTimeout","Error","then","result","catch","secondPromise","race","thirdPromise","all"],"mappings":";AAAA,aAEA,IAAMA,EAAgB,SAACC,EAASC,GAC9BC,SAASC,KAAKC,mBAAmB,YACjBH,qBAAAA,OAAAA,EACVD,qCAAAA,OAAAA,EAFN,sBAOIK,EAAe,SAACC,GACb,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAC3BP,SAASC,KAAKO,iBAAiBJ,EAAa,WAAME,OAAAA,SAIhDG,EAAe,IAAIJ,QAAQ,SAACC,EAASC,GACzCP,SAASC,KAAKO,iBAAiB,QAAS,WACtCF,EAAA,gCAGFI,WAAW,WACTH,EAAOI,MAAD,gCACL,OAGLF,EACGG,KAAK,SAAAC,GACJhB,EAAcgB,EAAQ,aAEvBC,MAAM,SAAAD,GACLhB,EAAcgB,EAAQ,aAG1B,IAAME,EAAgB,IAAIV,QAAQ,SAAAC,GAChCD,QAAQW,KAAK,CAACb,EAAa,SAAUA,EAAa,iBAC/CS,KAAK,WAAMN,OAAAA,EAAQ,mCAGxBS,EACGH,KAAK,SAAAC,GACJhB,EAAcgB,EAAQ,aAEvBC,MAAM,SAAAD,GACLhB,EAAcgB,EAAQ,aAG1B,IAAMI,EAAe,IAAIZ,QAAQ,SAACC,GAChCD,QAAQa,IAAI,CAACf,EAAa,SAAUA,EAAa,iBAC9CS,KAAK,WAAMN,OAAAA,EAAQ,kCAGxBW,EACGL,KAAK,SAAAC,GACJhB,EAAcgB,EAAQ,aAEvBC,MAAM,SAAAD,GACLhB,EAAcgB,EAAQ","file":"main.51ad900d.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst createMessage = (message, classType) => {\n  document.body.insertAdjacentHTML('beforeend', `\n    <div class=\"${classType}\" data-qa=\"notification\">\n      ${message}\n    </div>\n  `);\n};\n\nconst waitForClick = (typeOfClick) => {\n  return new Promise((resolve, reject) => {\n    document.body.addEventListener(typeOfClick, () => resolve());\n  });\n};\n\nconst firstPromise = new Promise((resolve, reject) => {\n  document.body.addEventListener('click', () => {\n    resolve(`First promise was resolved`);\n  });\n\n  setTimeout(() => {\n    reject(Error(`First promise was rejected`));\n  }, 3000);\n});\n\nfirstPromise\n  .then(result => {\n    createMessage(result, 'success');\n  })\n  .catch(result => {\n    createMessage(result, 'warning');\n  });\n\nconst secondPromise = new Promise(resolve => {\n  Promise.race([waitForClick('click'), waitForClick('contextmenu')])\n    .then(() => resolve('Second promise was resolved'));\n});\n\nsecondPromise\n  .then(result => {\n    createMessage(result, 'success');\n  })\n  .catch(result => {\n    createMessage(result, 'warning');\n  });\n\nconst thirdPromise = new Promise((resolve) => {\n  Promise.all([waitForClick('click'), waitForClick('contextmenu')])\n    .then(() => resolve('Third promise was resolved'));\n});\n\nthirdPromise\n  .then(result => {\n    createMessage(result, 'success');\n  })\n  .catch(result => {\n    createMessage(result, 'warning');\n  });\n"]}